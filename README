Mealy ‚Äî Online Food Ordering Platform
Description

Mealy is a full-stack food-ordering platform designed to connect customers with caterers.
Admins (caterers) can manage daily menus and dishes, while customers can browse menus, place orders, and view order history.
The system ensures smooth order tracking, user authentication, and role-based access using JWT.

Tools & Technologies Used
Backend

 Python 3.13

Flask (REST API framework)

 SQLAlchemy & Flask-Migrate (ORM and migrations)

 Flask-JWT-Extended (authentication)

 PostgreSQL (database)

 Pytest (testing)

Thunder Client / Postman (API testing)

Frontend 

 React 

Version Control

 Git & GitHub (collaborative workflow)

 Setup Instructions (After Cloning the Repo)
Clone the Repository
git clone https://github.com/steveofficial254/Group-2-mealy-project.git
cd Group-2-mealy-project

2Ô∏è Set Up the Virtual Environment
pipenv install
pipenv shell

3Ô∏èNavigate to the Backend Folder
cd backend

4Ô∏è Create a .env File

In the backend/ directory, create a .env file and add:

FLASK_APP=app.py
FLASK_ENV=development
DATABASE_URL=postgresql://mealy:mealy@localhost/mealy
JWT_SECRET_KEY=supersecret
SECRET_KEY=flasksecret

 Database Setup
1Ô∏è Start PostgreSQL
brew services start postgresql@15

2Ô∏è Create Database (only once)
psql postgres
CREATE ROLE mealy WITH LOGIN PASSWORD 'mealy';
ALTER ROLE mealy CREATEDB;
CREATE DATABASE mealy OWNER mealy;
\q

3Ô∏è Run Database Migrations
flask db init
flask db migrate -m "initial schema"
flask db upgrade

 Run the Application
flask run --debug


App will be live at:
 http://127.0.0.1:5000

üß™ API Testing via Thunder Client / Postman
 Register a User

POST /auth/register

{
  "email": "admin@mealy.io",
  "password": "admin123",
  "full_name": "Admin",
  "role": "admin"
}

 Login

POST /auth/login

{
  "email": "admin@mealy.io",
  "password": "admin123"
}

3Ô∏è‚É£ Create Caterer (Admin Only)

POST /caterers

{
  "name": "Mama‚Äôs Kitchen"
}


Headers:

Authorization: Bearer <access_token>

4Ô∏è‚É£ Add Dishes

POST /dishes

{
  "daily_menu_id": 1,
  "name": "Beef Rice",
  "price_cents": 1500,
  "category": "Lunch",
  "available_qty": 30,
  "image_url": "https://cdn.pixabay.com/photo/2016/02/19/11/53/food-1209007_960_720.jpg"
}

Screenshots (example placeholders)
Feature	Screenshot
 Homepage / API Health	

 User Registration	

Caterer Management	

 Order Flow	

Add at least 4 screenshots in a /screenshots/ folder at the root.

Authors / Acknowledgements
Name	Role
Mohamed Ali	Backend Developer
vallary-backend Developer
David Muchahi - Frontend Developer
steve mburu - frontend Developer


Group 2 Members	Collaborators

Special thanks to Moringa School & Mentors for guidance and project supervision.

 License

This project is licensed under the MIT License

